name: 'Terraform GitHub Actions'
on:
  push:
    branches:
      - master

    # paths:
    #   - 'DevOps/Terraform/ec2-instance/**'

      # - 'deployments/terraform/performance/**'
      # - 'deployments/terraform/staging/**'
      
env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@master

      # - name: 'Terraform Format'
      #   uses: hashicorp/terraform-github-actions@master
      #   with:
      #     tf_actions_version: 0.12.16
      #     tf_actions_subcommand: 'fmt'
      #     tf_actions_comment: true
      #     tf_actions_working_dir: - 'DevOps/Terraform/ec2-instance'
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 'Terraform Init'
        uses: iamtito/terraform-github-actions@master
        with:
          tf_actions_version: 0.12.16
          tf_actions_subcommand: 'init'
          tf_actions_comment: true
          tf_actions_working_dir: 'Terraform/ec2-instance'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 'Terraform Validate'
        uses: iamtito/terraform-github-actions@master
        with:
          tf_actions_version: 0.12.16
          tf_actions_subcommand: 'validate'
          tf_actions_comment: true
          tf_actions_working_dir: 'Terraform/ec2-instance'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 'Terraform Plan'
        uses: iamtito/terraform-github-actions@master
        with:
          tf_actions_version: 0.12.16
          tf_actions_subcommand: 'plan'
          tf_actions_comment: true
          tf_actions_working_dir: 'Terraform/ec2-instance'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: 'Terraform Apply'
      #   uses: hashicorp/terraform-github-actions@master
      #   with:
      #     tf_actions_version: 0.12.16
      #     tf_actions_subcommand: 'apply'
      #     tf_actions_comment: true
      #     tf_actions_working_dir: 'deployments/terraform/production/resources/cert-deploy'
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 'Terraform Destroy'
        uses: iamtito/terraform-github-actions@master
        with:
          tf_actions_version: 0.12.16
          tf_actions_subcommand: 'destroy'
          tf_actions_comment: true
          tf_actions_working_dir: 'Terraform/ec2-instance'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: Terraform security scan
      #   uses: triat/terraform-security-scan@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
